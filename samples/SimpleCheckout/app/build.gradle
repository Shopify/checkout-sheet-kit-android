plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'org.jetbrains.kotlin.plugin.serialization'
    id "com.apollographql.apollo"
}

def loadProperties() {
    def props = new Properties()
    file('../.env').withInputStream {
        props.load(it)
    }
    return props
}

def properties = loadProperties()
def storefrontDomain = properties.getProperty("STOREFRONT_DOMAIN")
def accessToken = properties.getProperty("STOREFRONT_ACCESS_TOKEN")

if (!storefrontDomain || !accessToken) {
    println("**** Please add a .env file with STOREFRONT_DOMAIN and STOREFRONT_ACCESS_TOKEN set *****")
}

private String getVersionName() {
    return file("./version").text.trim()
}

apollo {
    service("storefront") {
        packageName.set("com.shopify.checkout_sdk_sample")

        mapScalar("URL", "java.net.URL")
        mapScalarToKotlinDouble("Decimal")

        introspection {
            endpointUrl.set("https://$storefrontDomain/api/2024-10/graphql.json")
            headers.set(["X-Shopify-Storefront-Access-Token": "$accessToken"])
            schemaFile.set(file("src/main/graphql/schema.graphqls"))
        }
    }
}

android {
    namespace 'com.shopify.checkout_sdk_sample'
    compileSdk 34

    defaultConfig {
        applicationId "com.shopify.checkout_sdk_sample"
        minSdk 23
        targetSdk 34
        versionCode 1
        versionName getVersionName()

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            buildConfigField('String', 'storefrontDomain', '"' + storefrontDomain + '"')
            buildConfigField('String', 'storefrontAccessToken', '"' + accessToken + '"')
        }
        debug {
            debuggable true
            buildConfigField('String', 'storefrontDomain', '"' + storefrontDomain + '"')
            buildConfigField('String', 'storefrontAccessToken', '"' + accessToken + '"')
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        compose true
        buildConfig true
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.5.8'
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

dependencies {
    implementation project(':lib')
    implementation "androidx.core:core-ktx:$core_version"
    implementation "androidx.activity:activity-compose:$activity_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-compose:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version"
    implementation "androidx.compose.ui:ui:$compose_ui_version"
    implementation "androidx.compose.material:material:$compose_ui_version"

    implementation "com.apollographql.apollo:apollo-runtime:$apollo_version"
    implementation "com.apollographql.apollo:apollo-normalized-cache:$apollo_version"

    implementation "org.jetbrains.kotlinx:kotlinx-serialization-json:$kotlin_serialization_version"
    implementation "io.coil-kt:coil-compose:$coil_version"
}
